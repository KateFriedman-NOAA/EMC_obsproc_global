set -xa
date -u

if [ -n "$obsproc_global_ver" ]; then
   set +x
   echo
   echo "Current OBSPROC_GLOBAL version is $obsproc_global_ver"
   echo
   set -x
fi
if [ -n "$obsproc_dump_post_ver" ]; then
   set +x
   echo
   echo "OBSPROC_DUMP_POST version used by this job is $obsproc_dump_post_ver"
   echo
   set -x
fi
if [ -n "$obsproc_shared_bufr_remorest_ver" ]; then
   set +x
   echo
   echo "OBSPROC_SHARED_BUFR_REMOREST version used by this job is \
$obsproc_shared_bufr_remorest_ver"
   echo
   set -x
fi
if [ -n "$obsproc_shared_bufr_avgdata_ver" ]; then
   set +x
   echo
   echo "OBSPROC_SHARED_BUFR_AVGDATA version used by this job is \
$obsproc_shared_bufr_avgdata_ver"
   echo
   set -x
fi
if [ -n "$obsproc_shared_bufr_dumplist_ver" ]; then
   set +x
   echo
   echo "OBSPROC_SHARED_BUFR_DUMPLIST version used by this job is \
$obsproc_shared_bufr_dumplist_ver"
   echo
   set -x
fi

###################################################################
# Set DEBUG LEVEL - modifies info in execution trace prompt string
###################################################################
export DEBUG_LEVEL=${DEBUG_LEVEL=1}
case $DEBUG_LEVEL in
  1) export PS4='+ ${SECONDS}s + ' ;;       # add seconds (this is typical case)
  0) export PS4='+ ';;                      # don't include seconds (useful if
                                            #  want to diff output from 2 runs)
  2) export PS4='+ ${SECONDS}s:L$LINENO + ';;         # add script line #
  3) export PS4='+ ${SECONDS}s:${0##*/}:L$LINENO + ';;# add script name & line #
  *) echo "Unrecognized DEBUG_LEVEL.  Stay with current PS4 setting";;
esac

########################################
# Check that required variables are set
########################################
set +x
echo
echo cyc is ${cyc:?"###FATAL ERROR \"cyc\" is not set"}
echo envir is ${envir:?"###FATAL ERROR \"envir\" is not set"}
echo job is ${job:?"###FATAL ERROR \"job\" is not set"}
echo
set -x

##################################
# Specify NET, RUN and model Name
##################################
export NET=${NET:-gfs}
export RUN=${RUN:-gfs}
export model=${model:-gfs}  # Used in subscripts for file names

##############################
# Specify cycle and time-mark
##############################
export cycle=t${cyc}z
export tmmark=tm00

###############################
# Create new working directory
###############################
host=$(hostname -s)
if [[ ${USER} == nwprod ]]; then
  DATAROOT=/tmpnwprd
else
  DATAROOT=${DATAROOT:?"###FATAL ERROR \"DATAROOT\" is not set"}
  TMPDIR=$DATAROOT  # On WCOSS TMPDIR is reset to a temporary LSF
                    #  directory when jobs are submitted, set it
                    #  to $DATAROOT so its under the user's control
fi
export DATA=${DATA:-$DATAROOT/${job}.${host}.$$}
rm -rf $DATA
mkdir -p $DATA
cd $DATA

####################################################
# Set job log file for postmsg output
# Set alert log directory used by bufr_datacount.sh
####################################################
if [[ ${USER} == nwprod ]]; then
  if [[ ${envir} == prod ]]; then
    jlogfile=/com/logs/jlogfiles/jlogfile.${job}.$$
    ALERTL=/com/logs/alertlog
  else
    jlogfile=/com/logs/${envir}/jlogfile
    ALERTL=/com/logs/${envir}/alertlog
  fi
else
  jlogfile=${jlogfile:-${DATA}/jlogfile}
  ALERTL=${ALERTL:-${DATA}/alertlog}
fi
mkdir -p $ALERTL

######################################
# Determine Job Output Name on System
######################################
export pid=$$
export outid="LL$job"
[ $envir != prod ]  && export outid="LL${job}_${envir}"
export jobid="${outid}.o${pid}"
export pgmout="OUTPUT.${pid}"

###################################################################
# SENDCOM  - Copy files to /com directory
# SENDECF  - Flag Events on ECFLOW
# SENDDBN  - Alert output file to TOC
# SENDSDM  - Send files to SDM printer (used by bufr_datacount.sh)
###################################################################
if [[ ${USER} == nwprod ]]; then
  export SENDCOM=YES
  export SENDECF=YES
  if [[ ${envir} == prod ]]; then
    export SENDDBN=YES
    export SENDSDM=YES
  else
    export SENDDBN=NO
    export SENDSDM=YES
  fi
else  # developer
  export SENDCOM=${SENDCOM:-YES}
  export SENDECF=NO
  export SENDDBN=NO
  export SENDSDM=NO
fi

##########################
# Specify Execution Areas
##########################

# -------------------------------
# Paths for obsproc_network items
# -------------------------------
export HOMEobsproc_network=${HOMEobsproc_network:\
-/nw${envir}/obsproc_global.${obsproc_global_ver:?\
"###FATAL ERROR \"obsproc_global_ver\" is not set"}}

# ---------------------------------
# Paths for obsproc_dump_post items
# ---------------------------------
export HOMEobsproc_dump_post=${HOMEobsproc_dump_post:\
-/nw${envir}/obsproc_dump_post.${obsproc_dump_post_ver:?\
"###FATAL ERROR \"obsproc_dump_post_ver\" is not set"}}

export SCRIPTSobsproc_dump_post=${SCRIPTSobsproc_dump_post:\
-$HOMEobsproc_dump_post/scripts}

export EXECobsproc_dump_post=${EXECobsproc_dump_post:\
-$HOMEobsproc_dump_post/exec}

export USHobsproc_dump_post=${USHobsproc_dump_post:-$HOMEobsproc_dump_post/ush}

# --------------------------------------------
# Paths for obsproc_shared_bufr_remorest items
# --------------------------------------------
export HOMEobsproc_shared_bufr_remorest=${HOMEobsproc_shared_bufr_remorest:\
-/nw${envir}/obsproc_shared/bufr_remorest.${obsproc_shared_bufr_remorest_ver:?\
"###FATAL ERROR \"obsproc_shared_bufr_remorest_ver\" is not set"}}

export EXECobsproc_shared_bufr_remorest=${EXECobsproc_shared_bufr_remorest:\
-$HOMEobsproc_shared_bufr_remorest/exec}

export USHobsproc_shared_bufr_remorest=${USHobsproc_shared_bufr_remorest:\
-$HOMEobsproc_shared_bufr_remorest/ush}

# -------------------------------------------
# Paths for obsproc_shared_bufr_avgdata items
# -------------------------------------------
export HOMEobsproc_shared_bufr_avgdata=${HOMEobsproc_shared_bufr_avgdata:\
-/nw${envir}/obsproc_shared/bufr_avgdata.${obsproc_shared_bufr_avgdata_ver:?\
"###FATAL ERROR \"obsproc_shared_bufr_avgdata_ver\" is not set"}}

export EXECobsproc_shared_bufr_avgdata=${EXECobsproc_shared_bufr_avgdata:\
-$HOMEobsproc_shared_bufr_avgdata/exec}

export USHobsproc_shared_bufr_avgdata=${USHobsproc_shared_bufr_avgdata:\
-$HOMEobsproc_shared_bufr_avgdata/ush}

# --------------------------------------------
# Paths for obsproc_shared_bufr_dumplist items
# --------------------------------------------
export HOMEobsproc_shared_bufr_dumplist=${HOMEobsproc_shared_bufr_dumplist:\
-/nw${envir}/obsproc_shared/bufr_dumplist.${obsproc_shared_bufr_dumplist_ver:?\
"###FATAL ERROR \"obsproc_shared_bufr_dumplist_ver\" is not set"}}

export FIXobsproc_shared_bufr_dumplist=${FIXobsproc_shared_bufr_dumplist:\
-$HOMEobsproc_shared_bufr_dumplist/fix}

# ---------------------------
# Paths for non-obsproc items
# ---------------------------

# directory path to data count/alert processing executed in bufr_datacount.sh
#  and data count averaging executed in model script and in bufr_avgdata.sh
# ---------------------------------------------------------------------------
export HOMEarch=${HOMEarch:-/com/arch/${envir}}

#  .. AVGDarch_IN is directory path containing 30-day avg files (used by
#     bufr_datacount.sh)
#     ------------------------------------------------------------------
export AVGDarch_IN=${AVGDarch_IN:-$HOMEarch/avgdata}

# ..AVGDarch_OUT is directory path to write avg tables to (used in model script)
#   ----------------------------------------------------------------------------
if [[ ${USER} == nwprod ]]; then
  export AVGDarch_OUT=$HOMEarch/avgdata
else
  export AVGDarch_OUT=${AVGDarch_OUT:-${DATA}/avgdata}
fi
mkdir -p $AVGDarch_OUT

# .. OBCNTarch is directory path to write new status files to & read all status
#    files from {can WRITE to this location only if COPY=YES (the default)
#    --------------------------------------------------------------------------
export OBCNTarch=${OBCNTarch:-$HOMEarch/obcount_30day}

###########################
# Set up the UTILITY paths
###########################
export utilscript=${utilscript:-/nwprod/util/ush}
export utilparm=${utilparm:-/nwprod/util/parm}
export utilexec=${utilexec:-/nwprod/util/exec}

################################################################
# Run setup to initialize working directory and utility scripts
################################################################
if [[ ${USER} == nwprod ]]; then
  sh $utilscript/setup.sh
else
  sh ${SETUP:-/nwprod/util/ush}/setup.sh
fi

##########################################
# Run setpdy and initialize PDY variables
##########################################
sh $utilscript/setpdy.sh
. $DATA/PDY

#########################
# Define COM directories
#########################
if [ "$LSB_UNIXGROUP_INT" = 'prod' ]; then
  export COMIN=/com/${NET}/${envir}/${model}.${PDY}
  export COMOUT=/com/${NET}/${envir}/${model}.${PDY}
  mkdir -m 775 -p $COMOUT
else
  export COMIN_ROOT=${COMIN_ROOT:-/com}
  export COMIN=${COMIN:-${COMIN_ROOT}/${NET}/${envir}/${model}.${PDY}}

# COMOUT_ROOT for developers defaults to unique $DATA/com directory as root to
#  prevent job from writing into a non-unique directory (e.g.,
#  /ptmp[p][d]1/$USER/com) that might already have output in it from a previous
#  checkout run for the same cycle (this could mess up some logic downstream)
# -----------------------------------------------------------------------------
  export COMOUT_ROOT=${COMOUT_ROOT:-${DATA}/com}
  export COMOUT=${COMOUT:-${COMOUT_ROOT}/${NET}/${envir}/${model}.${PDY}}
  mkdir -m 755 -p $COMOUT
fi

################################################
# SETUP GFS DATA DUMP POST PROCESSING VARIABLES
################################################

#########################################################
# Specify variables specific to this execution of script
#########################################################
export PROCESS_DATACOUNTS=${PROCESS_DATACOUNTS:-YES}
export PROCESS_REMOREST=${PROCESS_REMOREST:-YES}
export PROCESS_UNBLKBUFR=${PROCESS_UNBLKBUFR:-NO} # Never processed in GFS run
export PROCESS_LISTERS=${PROCESS_LISTERS:-YES}

export PROCESS_AVGTABLES=${PROCESS_AVGTABLES:-NO} # Never processed in GFS run

env

#####################
# Execute the script
#####################
$SCRIPTSobsproc_dump_post/exdump_post.sh.ecf
eval err_${model}_dump_post=$?

echo "`hostname`  --  `date -u`" > $COMOUT/where_${cycle}_${RUN}_dump_post_ran

> $COMOUT/obsproc_version_for_${cycle}_${RUN}_dump_post_run
[ -n "$obsproc_global_ver" ]  &&  \
 echo "Current OBSPROC_GLOBAL version is $obsproc_global_ver" >> \
 $COMOUT/obsproc_version_for_${cycle}_${RUN}_dump_post_run
[ -n "$obsproc_dump_post_ver" ]  &&  \
 echo "OBSPROC_DUMP_POST version used by this job is \
$obsproc_dump_post_ver" >> \
 $COMOUT/obsproc_version_for_${cycle}_${RUN}_dump_post_run
[ -n "$obsproc_shared_bufr_remorest_ver" ]  &&  \
 echo "OBSPROC_SHARED_BUFR_REMOREST version used by this job is \
 $obsproc_shared_bufr_remorest_ver" >> \
 $COMOUT/obsproc_version_for_${cycle}_${RUN}_dump_post_run
[ -n "$obsproc_shared_bufr_avgdata_ver" ]  &&  \
 echo "OBSPROC_SHARED_BUFR_AVGDATA version used by this job is \
 $obsproc_shared_bufr_avgdata_ver" >> \
 $COMOUT/obsproc_version_for_${cycle}_${RUN}_dump_post_run
[ -n "$obsproc_shared_bufr_dumplist_ver" ]  &&  \
 echo "OBSPROC_SHARED_BUFR_DUMPLIST version used by this job is \
 $obsproc_shared_bufr_dumplist_ver" >> \
 $COMOUT/obsproc_version_for_${cycle}_${RUN}_dump_post_run

if [ "${CLEANUP:-YES}" = YES ]; then
   cd $DATAROOT
   rm -rf $DATA
fi
date -u

exit
