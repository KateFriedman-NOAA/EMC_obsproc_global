set -xa
date -u

if [ -n "$obsproc_global_ver" ]; then
   set +x
   echo
   echo "Current OBSPROC_GLOBAL version is $obsproc_global_ver"
   echo
   set -x
fi
if [ -n "$obsproc_dump_ver" ]; then
   set +x
   echo
   echo "OBSPROC_DUMP version used by this job is $obsproc_dump_ver"
   echo
   set -x
fi
if [ -n "$obsproc_shared_bufr_dumplist_ver" ]; then
   set +x
   echo
   echo "OBSPROC_SHARED_BUFR_DUMPLIST version used by this job is \
$obsproc_shared_bufr_dumplist_ver"
   echo
   set -x
fi

###################################################################
# Set DEBUG LEVEL - modifies info in execution trace prompt string
###################################################################
export DEBUG_LEVEL=${DEBUG_LEVEL=1}
case $DEBUG_LEVEL in
  1) export PS4='+ ${SECONDS}s + ' ;;       # add seconds (this is typical case)
  0) export PS4='+ ';;                      # don't include seconds (useful if
                                            #  want to diff output from 2 runs)
  2) export PS4='+ ${SECONDS}s:L$LINENO + ';;         # add script line #
  3) export PS4='+ ${SECONDS}s:${0##*/}:L$LINENO + ';;# add script name & line #
  *) echo "Unrecognized DEBUG_LEVEL.  Stay with current PS4 setting";;
esac

########################################
# Check that required variables are set
########################################
set +x
echo
echo cyc is ${cyc:?"###FATAL ERROR \"cyc\" is not set"}
echo envir is ${envir:?"###FATAL ERROR \"envir\" is not set"}
echo job is ${job:?"###FATAL ERROR \"job\" is not set"}
echo
set -x

##################################
# Specify NET, RUN and model Name
##################################
export NET=${NET:-cdas}
export RUN=${RUN:-cdas}
export model=${model:-cdas}  # Used in subscripts for file names

##############################
# Specify cycle and time-mark
##############################
export cycle=t${cyc}z
export tmmark=tm00

###############################
# Create new working directory
###############################
host=$(hostname -s)
if [[ ${USER} == nwprod ]]; then
  DATAROOT=/tmpnwprd1
else
  DATAROOT=${DATAROOT:?"###FATAL ERROR \"DATAROOT\" is not set"}
  TMPDIR=$DATAROOT  # On WCOSS TMPDIR is reset to a temporary LSF
                    #  directory when jobs are submitted, set it
                    #  to $DATAROOT so its under the user's control
fi
export DATA=${DATA:-$DATAROOT/${job}.${host}.$$}
rm -rf $DATA
mkdir -p $DATA
cd $DATA

######################################
# Set job log file for postmsg output
######################################
if [[ ${USER} == nwprod ]]; then
  if [[ ${envir} == prod ]]; then
    jlogfile=/com/logs/jlogfiles/jlogfile.${job}.$$
  else
    jlogfile=/com/logs/${envir}/jlogfile
  fi
else
  jlogfile=${jlogfile:-${DATA}/jlogfile}
fi

######################################
# Determine Job Output Name on System
######################################
export pid=$$
export outid="LL$job"
[ $envir != prod ]  && export outid="LL${job}_${envir}"
export jobid="${outid}.o${pid}"
export pgmout="OUTPUT.${pid}"

################################################
# SENDCOM      - Copy files to /com directory
# SENDECF      - Flag Events on ECFLOW
# SENDDBN      - Alert output file to TOC
# SENDDBN_GB2  - Alert output GRIB2 file to TOC
################################################
if [[ ${USER} == nwprod ]]; then
  export SENDCOM=YES
  export SENDECF=YES
  if [[ ${envir} == prod ]]; then
    export SENDDBN=YES
    export SENDDBN_GB2=YES
  else
    export SENDDBN=NO
    export SENDDBN_GB2=NO
  fi
else  # developer
  export SENDCOM=${SENDCOM:-YES}
  export SENDECF=NO
  export SENDDBN=NO
  export SENDDBN_GB2=NO
fi

##########################
# Specify Execution Areas
##########################

# -------------------------------
# Paths for obsproc_network items
# -------------------------------
export HOMEobsproc_network=${HOMEobsproc_network:\
-/nw${envir}/obsproc_global.${obsproc_global_ver:?\
"###FATAL ERROR \"obsproc_global_ver\" is not set"}}

export SCRIPTSobsproc_global=${SCRIPTSobsproc_global:\
-$HOMEobsproc_network/scripts}

# ----------------------------
# Paths for obsproc_dump items
# ----------------------------
export HOMEobsproc_dump=${HOMEobsproc_dump:\
-/nw${envir}/obsproc_dump.${obsproc_dump_ver:?\
"###FATAL ERROR \"obsproc_dump_ver\" is not set"}}

export USHobsproc_dump=${USHobsproc_dump:-$HOMEobsproc_dump/ush}

# NOTE: path to dump executables defaults to $HOMEobsproc_dump/exec in dumpjb

# directory path to data dump script executed in model script
# -----------------------------------------------------------
export ushscript_dump=${ushscript_dump:-$USHobsproc_dump}

# ---------------------------------------------------------
# Paths for combined obsproc_network and obsproc_dump items
# ---------------------------------------------------------

# directory paths to SSMI dump re-processing executed in bufr_dump_obs
# --------------------------------------------------------------------
export EXECPREP=${EXECPREP:-$HOMEobsproc_dump/exec}
export PARMPREP=${PARMPREP:-$HOMEobsproc_network/parm}
export FIXPREP=${FIXPREP:-$HOMEobsproc_dump/fix}

# directory paths to ERS, QuikSCAT & ASCAT dump re-processing executed in
#  bufr_dump_obs
# -----------------------------------------------------------------------
export EXECWAVE=${EXECWAVE:-$HOMEobsproc_dump/exec}
export PARMWAVE=${PARMWAVE:-$HOMEobsproc_network/parm}
export FIXWAVE=${FIXWAVE:-$HOMEobsproc_dump/fix}

# directory paths to SSMI, TRMM & WindSAT dump re-processing executed in
#  bufr_dump_obs
# ----------------------------------------------------------------------
export EXECbufr=${EXECbufr:-$HOMEobsproc_dump/exec}
export PARMbufr=${PARMbufr:-$HOMEobsproc_network/parm}
export FIXbufr=${FIXbufr:-$HOMEobsproc_dump/fix}

# --------------------------------------------
# Paths for obsproc_shared_bufr_dumplist items
# --------------------------------------------
export HOMEobsproc_shared_bufr_dumplist=${HOMEobsproc_shared_bufr_dumplist:\
-/nw${envir}/obsproc_shared/bufr_dumplist.${obsproc_shared_bufr_dumplist_ver:?\
"###FATAL ERROR \"obsproc_shared_bufr_dumplist_ver\" is not set"}}

export FIXobsproc_shared_bufr_dumplist=${FIXobsproc_shared_bufr_dumplist:\
-$HOMEobsproc_shared_bufr_dumplist/fix}

# ---------------------------
# Paths for non-obsproc items
# ---------------------------

# TANK is root directory path to observational database used in dumpjb
#  and engice, sst & snowdepth grib files used in model script
# --------------------------------------------------------------------
export DCOMROOT=${DCOMROOT:-/dcom}
export TANK=${TANK:-${DCOMROOT}/us007003}

# directory paths to engice, sst & snowdepth grib files used in model script
# --------------------------------------------------------------------------
export COM_ENGICE=${COM_ENGICE:-/com/omb/prod/sice}
export COM_SSTOI=${COM_SSTOI:-/com/gfs/prod/sst}
export TANK_GRIBFLDS=${TANK_GRIBFLDS:-${DCOMROOT}/us007003}

# directory path to grib file processing executed in model script and
#  bufr_dump_obs
# --------------------------------------------------------------------
export EXGRBIX=${EXGRBIX:-/nwprod/util/exec}

###########################
# Set up the UTILITY paths
###########################
export utilscript=${utilscript:-/nwprod/util/ush}
export utilparm=${utilparm:-/nwprod/util/parm}
export utilexec=${utilexec:-/nwprod/util/exec}

################################################################
# Run setup to initialize working directory and utility scripts
################################################################
if [[ ${USER} == nwprod ]]; then
  sh $utilscript/setup.sh
else
  sh ${SETUP:-/nwprod/util/ush}/setup.sh
fi

##########################################
# Run setpdy and initialize PDY variables
##########################################
if test "$cyc" = "06"
then

# With a very late cutoff, it is possible for the 06Z cycle
# to move into the next day if production is running late -
# to ensure that the YYYYMMDD are correct, use the /com/date/t12z
# file for our PDY

   export cycle=t12z
   sh $utilscript/setpdy.sh
   . $DATA/PDY
   export cycle=t06z
   sh $utilscript/setpdy.sh
   . $DATA/PDY

elif test "$cyc" = "18"
then

# With a very late cutoff, it is possible for the 18Z cycle
# to move into the next day if production is running late -
# to ensure that the YYYYMMDD are correct, use the /com/date/t00z
# file to make PDY then backdate this PDY by 24-hours to get our PDY

   export cycle=t00z
   sh $utilscript/setpdy.sh
   . $DATA/PDY
   PDY=$PDYm1
   sh $utilscript/setpdy.sh
   . $DATA/PDY
   export cycle=t18z
   sh $utilscript/setpdy.sh
   . $DATA/PDY

else

# At 00 and 12Z, there should never be a problem

   sh $utilscript/setpdy.sh
   . $DATA/PDY

fi

#########################
# Define COM directories
#########################
export ARCPDY=`echo $PDY | cut -c1-6`
if [ "$LSB_UNIXGROUP_INT" = 'prod' ]; then
  export COMIN=/com/${NET}/${envir}/${model}.${PDY}
  export COMOUT=/com/${NET}/${envir}/${model}.${PDY}
  mkdir -m 775 -p $COMOUT
  export COMARC=/com/arkv/${envir}/${model}.${ARCPDY}
  mkdir -m 775 -p $COMARC
else
  export COMIN_ROOT=${COMIN_ROOT:-/com}
  export COMIN=${COMIN:-${COMIN_ROOT}/${NET}/${envir}/${model}.${PDY}}

# COMOUT_ROOT for developers defaults to unique $DATA/com directory as root to
#  prevent job from writing into a non-unique directory (e.g.,
#  /ptmp[p][d]1/$USER/com) that might already have a dump status file in it
#  from a previous checkout run (this could mess up some logic downstream)
# ----------------------------------------------------------------------------
  export COMOUT_ROOT=${COMOUT_ROOT:-${DATA}/com}
  export COMOUT=${COMOUT:-${COMOUT_ROOT}/${NET}/${envir}/${model}.${PDY}}
  mkdir -m 755 -p $COMOUT
  export COMARC=${COMARC:-${COMOUT_ROOT}/arkv/${envir}/${model}.${ARCPDY}}
  mkdir -m 755 -p $COMARC
fi

############################################
# SETUP CDAS DATA DUMP PROCESSING VARIABLES
############################################

#########################################################
# Specify variables specific to this execution of script
#########################################################
export PROCESS_GRIBFLDS=${PROCESS_GRIBFLDS:-YES}
export PROCESS_DUMP=${PROCESS_DUMP:-YES}
export prepssmi=NO # "spssmi" reprocessed dump no longer generated
                   # since SSM/I instrument on F-13 has failed (11/2009)

# During the period where both Goodberlet and NN3 SSM/I products are
#  being dumped, switch PREPSSMI_PROD_TYPE will direct the PREPSSMI
#  program to process from SSM/I data dumps that are either all GOODBERLET,
#  all NEURAL_NET3 or some COMBINATION of these two
#   -- rendered meaningless after 11/2009 since prepssmi now set to "no" (above)

export PREPSSMI_PROD_TYPE=COMBINATION

# POE must be set to on if running poe
###export POE=on

# -- or -- BACK must be set to on if running background shells
export BACK=on # "on" is default

env

#####################
# Execute the script
#####################
$SCRIPTSobsproc_global/exglobal_dump.sh.ecf
eval err_${model}_dump=$?

echo "`hostname`  --  `date -u`" > $COMOUT/where_${cycle}_${RUN}_dump_ran

> $COMOUT/obsproc_version_for_${cycle}_${RUN}_dump_run
[ -n "$obsproc_global_ver" ]  &&  \
 echo "Current OBSPROC_GLOBAL version is $obsproc_global_ver" >> \
 $COMOUT/obsproc_version_for_${cycle}_${RUN}_dump_run
[ -n "$obsproc_dump_ver" ]  &&  \
 echo "OBSPROC_DUMP version used by this job is $obsproc_dump_ver" >> \
 $COMOUT/obsproc_version_for_${cycle}_${RUN}_dump_run
[ -n "$obsproc_shared_bufr_dumplist_ver" ]  &&  \
 echo "OBSPROC_SHARED_BUFR_DUMPLIST version used by this job is \
$obsproc_shared_bufr_dumplist_ver" >> \
 $COMOUT/obsproc_version_for_${cycle}_${RUN}_dump_run

#
# Copy dump files to arkv directory, preserving ownership & group id but
#  updating timestamp
#

set +x
for fil in `ls $COMOUT/cdas.${cycle}*bufr_d`
do
  nfil="`basename $fil | awk -F. '{print $3}'`.${PDY}${cyc}.bufr_d"
set -x
  cp -p $fil ${COMARC}/${nfil}
  touch ${COMARC}/${nfil}
set +x
done
set -x

if [ "${CLEANUP:-YES}" = YES ]; then
   cd $DATAROOT
   rm -rf $DATA
fi
date -u

exit
