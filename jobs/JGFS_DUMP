#!/bin/ksh

set -xa

set +x
echo
echo "Current OBSPROC_GLOBAL version is $obsproc_global_ver"
echo "OBSPROC_DUMP version used by this job is $obsproc_dump_ver"
echo
set -x

#################################
# SET SHELL PROCESSING VARIABLES
#################################
export PS4='$SECONDS + '
date

######################################################
# The following variable could be defined in the LSF
# submission script (the ECFLOW script), if not it
# will take the default value which is set for the
# NCO running environment
######################################################
export RUN_ENVIR=${RUN_ENVIR:-prod}

##################################
# Specify NET, RUN and model Name
##################################
export NET=${NET:-gfs}
export RUN=${RUN:-gfs}
export model=${model:-gfs}

if [ $envir = "prod" ]
then
   export SENDDBN=${SENDDBN:-YES}
   export SENDDBN_GB2=${SENDDBN_GB2:-YES}
   export jlogfile=${jlogfile:-/com/logs/jlogfiles/jlogfile.${job}.$$}
   export DCOMROOT=${DCOMROOT:-/dcom}
else
   export SENDDBN=${SENDDBN:-NO}
   export SENDDBN_GB2=${SENDDBN_GB2:-NO}
   export jlogfile=${jlogfile:-/com/logs/${envir}/jlogfile}
   export COM_IN=/com/${NET}/prod
   export COM_OUT=/com/${NET}/${envir}
   export ushscript_dump=/nw${envir}/ush
                                      # path to observational data dump scripts
fi

#####################################
# Run config to get input parameters
#####################################
if [ "$RUN_ENVIR" = dev ]      ### For Developers to specify the necessary
                               ### parameters to overwrite the default settings
then
  . /meso/save/${LOGNAME}/.....
fi

###########################################
# SETUP GFS DATA DUMP PROCESSING VARIABLES
###########################################

#########################################################
# obtain unique process id (pid) and make temp directory
#########################################################
export pid=$$
export DATAROOT=${DATAROOT:-/tmpnwprd}
export DATA=${DATA:-$DATAROOT/${job}.${pid}}

if [ "${CLEANUP:-YES}" = YES ]; then
   rm -r -f $DATA
fi
mkdir -p $DATA
cd $DATA

###################
# File To Log Msgs
###################
export jlogfile=${jlogfile:-/com/logs/jlogfiles/jlogfile.${job}.${pid}}

export cycle=t${cyc}z
export tmmark=tm00

######################################
# Determine Job Output Name on System
######################################
export outid="LL$job"
[ $envir != prod ]  && export outid="LL${job}_${envir}"
export jobid="${outid}.o${pid}"
export pgmout="OUTPUT.${pid}"

##################################################################
# SENDCOM=YES   - Copy output files to /com directory
# SENDECF=YES   - Flag Events on ECFLOW
# SENDDBN=YES   - Alert output file to TOC, set to NO for testing
##################################################################
export SENDCOM=${SENDCOM:-YES}
export SENDECF=${SENDECF:-YES}
export SENDDBN=${SENDDBN:-YES}       # need to set to NO for testing only

##########################
# Specify Execution Areas
##########################
export HOMEobsproc_network=${HOMEobsproc_network:-/nw${envir}/obsproc_global.${obsproc_global_ver}}
export SCRIPTSobsproc_global=${SCRIPTSobsproc_global:-$HOMEobsproc_network/scripts}

export HOMEobsproc_dump=${HOMEobsproc_dump:-/nw${envir}/obsproc_dump.${obsproc_dump_ver}}

# Below for paths to SSMI dump re-processing in bufr_dump_obs
export EXECPREP=${EXECPREP:-$HOMEobsproc_dump/exec}
export PARMPREP=${PARMPREP:-$HOMEobsproc_network/parm}
export FIXPREP=${FIXPREP:-$HOMEobsproc_dump/fix}

# Below for paths to ERS, QuikSCAT & ASCAT dump re-processing in bufr_dump_obs
export EXECWAVE=${EXECWAVE:-$HOMEobsproc_dump/exec}
export PARMWAVE=${PARMWAVE:-$HOMEobsproc_network/parm}
export FIXWAVE=${FIXWAVE:-$HOMEobsproc_dump/fix}

# Below for paths to SSMI, TRMM & WindSAT dump re-processing in bufr_dump_obs
export EXECBUFR=${EXECBUFR:-$HOMEobsproc_dump/exec}
export PARMBUFR=${PARMBUFR:-$HOMEobsproc_network/parm}
export FIXBUFR=${FIXBUFR:-$HOMEobsproc_dump/fix}

# Below for paths to engice, sst & snowdepth grib files in model script
export COM_ENGICE=${COM_ENGICE:-/com/omb/prod/sice}
export COM_SSTOI=${COM_SSTOI:-/com/gfs/prod/sst}
export TANK_GRIBFLDS=${TANK_GRIBFLDS:-${DCOMROOT}/us007003}

# Below for path to observational database in dumpjb
export TANK=${TANK:-${DCOMROOT}/us007003}

# NOTE: path to dump executables defaults to $HOMEobsproc_dump/exec in dumpjb

# Below for path to grib file proessing exec in model script & bufr_dump_obs
export EXGRBIX=${EXGRBIX:-/nwprod/util/exec}

# Below for path to observational data dump script in model script
export ushscript_dump=${ushscript_dump:-$HOMEobsproc_dump/ush}

#######################
# Set up the UTILITIES
#######################
export utilscript=${utilscript:-/nwprod/util/ush}
export utilparm=${utilparm:-/nwprod/util/parm}
export utilexec=${utilexec:-/nwprod/util/exec}

################################################################
# Run setup to initialize working directory and utility scripts
################################################################
sh $utilscript/setup.sh

##########################################
# Run setpdy and initialize PDY variables
##########################################
sh $utilscript/setpdy.sh
. $DATA/PDY

#########################
# Define COM directories
#########################
export COM_IN_ROOT=${COM_IN_ROOT:-/com}
export COM_IN=${COM_IN:-${COM_IN_ROOT}/${NET}/${envir}}
export COM_OUT_ROOT=${COM_OUT_ROOT:-/com}
export COM_OUT=${COM_OUT:-${COM_OUT_ROOT}/${NET}/${envir}}

export COM=${COM:-${COM_IN}}
export COMIN=${COMIN:-${COM_IN}/${model}.${PDY}}
export COMOUT=${COMOUT:-${COM_OUT}/${model}.${PDY}}

mkdir -m 775 -p $COMOUT

#########################################################
# Specify variables specific to this execution of script
#########################################################
export PROCESS_GRIBFLDS=${PROCESS_GRIBFLDS:-YES}
export PROCESS_DUMP=${PROCESS_DUMP:-YES}
export prepssmi=NO # "spssmi" reprocessed dump no longer generated
                   # since SSM/I instrument on F-13 has failed (11/2009)

# During the period where both Goodberlet and NN3 SSM/I products are
#  being dumped, switch PREPSSMI_PROD_TYPE will direct the PREPSSMI
#  program to process from SSM/I data dumps that are either all GOODBERLET,
#  all NEURAL_NET3 or some COMBINATION of these two
#   -- rendered meaningless after 11/2009 since prepssmi now set to "no" (above)

export PREPSSMI_PROD_TYPE=COMBINATION

# POE must be set to on if running poe
###export POE=on

# -- or -- BACK must be set to on if running background shells
export BACK=on # "on" is default

env

#####################
# Execute the script
#####################
$SCRIPTSobsproc_global/exglobal_dump.sh.ecf
eval err_${model}_dump=$?

echo "`hostname`  --  `date`" > $COMOUT/where_${cycle}_${RUN}_dump_ran

if [ "${CLEANUP:-YES}" = YES ]; then
   cd $DATAROOT
   rm -rf $DATA
fi

date
exit
